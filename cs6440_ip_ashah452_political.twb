<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='cs6440_ip_ashah452_political' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet2 (proj1)' inline='true' name='federated.0cij3mz0hju3951due9z30oitx0r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='proj1' name='excel-direct.1cs6qxc011ibbh1dbtevv1jgmeuk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AbhishekShah/Downloads/proj1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1cs6qxc011ibbh1dbtevv1jgmeuk' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:I53:no:A1:I53:0' header='yes' outcome='6'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='cases' ordinal='2' />
            <column datatype='integer' name='deaths' ordinal='3' />
            <column datatype='integer' name='pop' ordinal='4' />
            <column datatype='real' name='death/mil resident' ordinal='5' />
            <column datatype='real' name='cases/mil resident' ordinal='6' />
            <column datatype='real' name='death/1000 cases' ordinal='7' />
            <column datatype='string' name='Political' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1cs6qxc011ibbh1dbtevv1jgmeuk' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:I53:no:A1:I53:0' header='yes' outcome='6'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='cases' ordinal='2' />
            <column datatype='integer' name='deaths' ordinal='3' />
            <column datatype='integer' name='pop' ordinal='4' />
            <column datatype='real' name='death/mil resident' ordinal='5' />
            <column datatype='real' name='cases/mil resident' ordinal='6' />
            <column datatype='real' name='death/1000 cases' ordinal='7' />
            <column datatype='string' name='Political' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I53:no:A1:I53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>pop</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death/mil resident</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death/mil resident]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>death/mil resident</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases/mil resident</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases/mil resident]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>cases/mil resident</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death/1000 cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death/1000 cases]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>death/1000 cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Political]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Political</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_F08D05F4501F4CCC97226C27AA48B210]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet2' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_F08D05F4501F4CCC97226C27AA48B210]' role='measure' type='quantitative' />
      <column caption='Cases/Mil Resident' datatype='real' name='[cases/mil resident]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Death/1000 Cases' datatype='real' name='[death/1000 cases]' role='measure' type='quantitative' />
      <column caption='Death/Mil Resident' datatype='real' name='[death/mil resident]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Pop' datatype='integer' name='[pop]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet2' id='Sheet2_F08D05F4501F4CCC97226C27AA48B210'>
            <properties context=''>
              <relation connection='excel-direct.1cs6qxc011ibbh1dbtevv1jgmeuk' name='Sheet2' table='[Sheet2$]' type='table'>
                <columns gridOrigin='A1:I53:no:A1:I53:0' header='yes' outcome='6'>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='cases' ordinal='2' />
                  <column datatype='integer' name='deaths' ordinal='3' />
                  <column datatype='integer' name='pop' ordinal='4' />
                  <column datatype='real' name='death/mil resident' ordinal='5' />
                  <column datatype='real' name='cases/mil resident' ordinal='6' />
                  <column datatype='real' name='death/1000 cases' ordinal='7' />
                  <column datatype='string' name='Political' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet2 (owid-covid-data)' inline='true' name='federated.02rbpe30h2sb00156c1oj1elepec' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='proj1' name='excel-direct.18lin0b0i3fati1h2d22z1xoxvrl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AbhishekShah/Downloads/proj1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18lin0b0i3fati1h2d22z1xoxvrl' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:I53:no:A1:I53:0' header='yes' outcome='6'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='cases' ordinal='2' />
            <column datatype='integer' name='deaths' ordinal='3' />
            <column datatype='integer' name='pop' ordinal='4' />
            <column datatype='real' name='death/mil resident' ordinal='5' />
            <column datatype='real' name='cases/mil resident' ordinal='6' />
            <column datatype='real' name='death/1000 cases' ordinal='7' />
            <column datatype='string' name='Political' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.18lin0b0i3fati1h2d22z1xoxvrl' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:I53:no:A1:I53:0' header='yes' outcome='6'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='cases' ordinal='2' />
            <column datatype='integer' name='deaths' ordinal='3' />
            <column datatype='integer' name='pop' ordinal='4' />
            <column datatype='real' name='death/mil resident' ordinal='5' />
            <column datatype='real' name='cases/mil resident' ordinal='6' />
            <column datatype='real' name='death/1000 cases' ordinal='7' />
            <column datatype='string' name='Political' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I53:no:A1:I53:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>pop</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death/mil resident</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death/mil resident]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>death/mil resident</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases/mil resident</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases/mil resident]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>cases/mil resident</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death/1000 cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death/1000 cases]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>death/1000 cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Political</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Political]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Political</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet2' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_1090422D117C4EABA28CC0F960DBAB33]' role='measure' type='quantitative' />
      <column caption='Cases/Mil Resident' datatype='real' name='[cases/mil resident]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Death/1000 Cases' datatype='real' name='[death/1000 cases]' role='measure' type='quantitative' />
      <column caption='Death/Mil Resident' datatype='real' name='[death/mil resident]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AbhishekShah/Desktop/cs6440_ip_ashah452_factors.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/29/2020 11:16:26 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet2 (owid-covid-data)' increment-value='%null%' refresh-type='create' rows-inserted='52' timestamp-start='2020-11-29 23:16:26.762' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet2</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deaths</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pop</remote-name>
              <remote-type>20</remote-type>
              <local-name>[pop]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pop</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death/mil resident</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death/mil resident]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death/mil resident</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cases/mil resident</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cases/mil resident]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cases/mil resident</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death/1000 cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death/1000 cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death/1000 cases</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Political</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Political]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Political</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet2</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1090422D117C4EABA28CC0F960DBAB33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Political:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet2' id='Sheet2_1090422D117C4EABA28CC0F960DBAB33'>
            <properties context=''>
              <relation connection='excel-direct.18lin0b0i3fati1h2d22z1xoxvrl' name='Sheet2' table='[Sheet2$]' type='table'>
                <columns gridOrigin='A1:I53:no:A1:I53:0' header='yes' outcome='6'>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='cases' ordinal='2' />
                  <column datatype='integer' name='deaths' ordinal='3' />
                  <column datatype='integer' name='pop' ordinal='4' />
                  <column datatype='real' name='death/mil resident' ordinal='5' />
                  <column datatype='real' name='cases/mil resident' ordinal='6' />
                  <column datatype='real' name='death/1000 cases' ordinal='7' />
                  <column datatype='string' name='Political' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.02rbpe30h2sb00156c1oj1elepec'>
      <datasources>
        <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
      </datasources>
      <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
        <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
        <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
        <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Political:nk]' member='&quot;Democratic&quot;' />
          <groupfilter function='member' level='[none:Political:nk]' member='&quot;Republican&quot;' />
        </groupfilter>
        <target field='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]' included-values='in-range-or-null'>
        <min>567025</min>
        <max>39937500</max>
      </filter>
      <filter class='categorical' column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]'>
        <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:state:nk]' to='&quot;Wyoming&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Covid cases per million residents'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
          </datasources>
          <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
            <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
            <column caption='Cases/Mil Resident' datatype='real' name='[cases/mil resident]' role='measure' type='quantitative' />
            <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
            <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases/mil resident]' derivation='Sum' name='[sum:cases/mil resident:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:cases/mil resident:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02rbpe30h2sb00156c1oj1elepec].[sum:cases/mil resident:qk]</rows>
        <cols>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{2408F100-06BD-4589-8856-838B9FCE2353}' />
    </worksheet>
    <worksheet name='Covid deaths per 1000 cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
          </datasources>
          <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
            <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
            <column caption='Death/1000 Cases' datatype='real' name='[death/1000 cases]' role='measure' type='quantitative' />
            <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
            <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death/1000 cases]' derivation='Sum' name='[sum:death/1000 cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/1000 cases:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/1000 cases:qk]</rows>
        <cols>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{FB42D871-F501-4FDC-B425-CA2FB69F5E41}' />
    </worksheet>
    <worksheet name='Covid deaths per million residents'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
          </datasources>
          <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
            <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
            <column caption='Death/Mil Resident' datatype='real' name='[death/mil resident]' role='measure' type='quantitative' />
            <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
            <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death/mil resident]' derivation='Sum' name='[sum:death/mil resident:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/mil resident:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/mil resident:qk]</rows>
        <cols>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{42BD615E-D175-4EF2-AF4D-0E05935D48CA}' />
    </worksheet>
    <worksheet name='cases per mil map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
            <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
            <column caption='Cases/Mil Resident' datatype='real' name='[cases/mil resident]' role='measure' type='quantitative' />
            <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
            <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases/mil resident]' derivation='Sum' name='[sum:cases/mil resident:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02rbpe30h2sb00156c1oj1elepec].[Longitude (generated)]' field-type='quantitative' max='-47583133.651500806' min='-54159510.181058697' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02rbpe30h2sb00156c1oj1elepec].[Latitude (generated)]' field-type='quantitative' max='7737766.7828854518' min='1944099.9070085792' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' />
              <size column='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:cases/mil resident:qk]' />
              <text column='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:cases/mil resident:qk]' />
              <lod column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02rbpe30h2sb00156c1oj1elepec].[Latitude (generated)]</rows>
        <cols>[federated.02rbpe30h2sb00156c1oj1elepec].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D09C9290-EE1A-45E3-B2DA-F7EF10A80C80}' />
    </worksheet>
    <worksheet name='deaths per k cases map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
            <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
            <column caption='Death/1000 Cases' datatype='real' name='[death/1000 cases]' role='measure' type='quantitative' />
            <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
            <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death/1000 cases]' derivation='Sum' name='[sum:death/1000 cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' />
              <size column='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/1000 cases:qk]' />
              <text column='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/1000 cases:qk]' />
              <lod column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02rbpe30h2sb00156c1oj1elepec].[Latitude (generated)]</rows>
        <cols>[federated.02rbpe30h2sb00156c1oj1elepec].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{52D77A88-BF41-4DFC-9FBE-C49214AE83D7}' />
    </worksheet>
    <worksheet name='deaths per mil map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
            <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
            <column caption='Death/Mil Resident' datatype='real' name='[death/mil resident]' role='measure' type='quantitative' />
            <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
            <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death/mil resident]' derivation='Sum' name='[sum:death/mil resident:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</column>
            <column>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' />
              <size column='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/mil resident:qk]' />
              <text column='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/mil resident:qk]' />
              <lod column='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02rbpe30h2sb00156c1oj1elepec].[Latitude (generated)]</rows>
        <cols>[federated.02rbpe30h2sb00156c1oj1elepec].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F8379260-D4D7-4D98-8D62-DF70E3638923}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid view by political party'>
      <style />
      <size maxheight='1500' maxwidth='1600' minheight='1500' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet2 (owid-covid-data)' name='federated.02rbpe30h2sb00156c1oj1elepec' />
      </datasources>
      <datasource-dependencies datasource='federated.02rbpe30h2sb00156c1oj1elepec'>
        <column caption='Political1' datatype='string' name='[Political]' role='dimension' type='nominal' />
        <column-instance column='[Political]' derivation='None' name='[none:Political:nk]' pivot='key' type='nominal' />
        <column-instance column='[pop]' derivation='None' name='[none:pop:qk]' pivot='key' type='quantitative' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='Population' datatype='integer' name='[pop]' role='measure' type='quantitative' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='33333' id='3' name='Covid cases per million residents' w='87500' x='0' y='0' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='80000' id='10' name='Covid cases per million residents' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' w='11875' x='88125' y='19667' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7667' id='9' name='Covid cases per million residents' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' w='11875' x='88125' y='11667' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5333' id='8' name='Covid cases per million residents' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]' show-domain='false' show-null-ctrls='false' w='11875' x='88125' y='6067' />
        <zone h='33333' id='12' name='Covid deaths per million residents' w='87500' x='0' y='33400' />
        <zone h='33333' id='16' name='Covid deaths per 1000 cases' w='87500' x='0' y='66733' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6000' id='19' name='Covid cases per million residents' pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' w='11875' x='88125' y='0' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='31' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98934' id='30' param='vert' w='99000' x='500' y='533'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='80000' id='10' mode='checkdropdown' name='Covid cases per million residents' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' w='11875' x='88125' y='19667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7667' id='9' mode='checkdropdown' name='Covid cases per million residents' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' w='11875' x='88125' y='11667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='5333' id='8' name='Covid cases per million residents' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]' show-domain='false' show-null-ctrls='false' w='11875' x='88125' y='6067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='3' is-fixed='true' name='Covid cases per million residents' w='87500' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6000' id='19' name='Covid cases per million residents' pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' w='11875' x='88125' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='12' is-fixed='true' name='Covid deaths per million residents' w='87500' x='0' y='33400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33333' id='16' is-fixed='true' name='Covid deaths per 1000 cases' w='87500' x='0' y='66733'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AB64D74E-D9B4-474B-8A9C-4ABA587D7871}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='cases per mil map' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10500' id='8' name='cases per mil map' pane-specification-id='1' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='23000' id='9' name='cases per mil map' pane-specification-id='1' param='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:cases/mil resident:qk]' w='16000' x='83200' y='11500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='21' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='20' param='vert' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='cases per mil map' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10500' id='8' name='cases per mil map' pane-specification-id='1' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='23000' id='9' name='cases per mil map' pane-specification-id='1' param='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:cases/mil resident:qk]' w='16000' x='83200' y='11500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{26CB8AC9-84D9-447F-90D3-C2E21C36E6C0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' maximized='true' name='Covid deaths per 1000 cases'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='filter' />
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</field>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{537B51A1-8765-4949-8813-69880D02AF58}' />
    </window>
    <window class='worksheet' name='Covid cases per million residents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='filter' />
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</field>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6534DFA9-A1AF-48E4-9A6C-6A740D7F9BA9}' />
    </window>
    <window class='worksheet' name='Covid deaths per million residents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='filter' />
            <card param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:pop:qk]</field>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C279FB4-C1EE-4340-87E2-855E984A337C}' />
    </window>
    <window class='worksheet' name='cases per mil map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:cases/mil resident:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A6C4B13-AF46-40D5-A89E-C25983776BE2}' />
    </window>
    <window class='worksheet' name='deaths per mil map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/mil resident:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81685F07-B910-47B1-AA82-86025C677622}' />
    </window>
    <window class='worksheet' name='deaths per k cases map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.02rbpe30h2sb00156c1oj1elepec].[sum:death/1000 cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C0EDCFB-3D31-44FA-AC6B-573EB625A60B}' />
    </window>
    <window class='dashboard' name='Covid view by political party'>
      <viewpoints>
        <viewpoint name='Covid cases per million residents'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Covid deaths per 1000 cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Covid deaths per million residents'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{943038B9-1AA3-4CA6-A16E-60FBE037F46C}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='cases per mil map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.02rbpe30h2sb00156c1oj1elepec].[none:Political:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{55B3020B-E141-4C86-91A6-C778496DFED5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid cases per million residents' width='192'>
      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
      MK6Hm50AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Covid deaths per 1000 cases' width='192'>
      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
      mub/BxkEKg5H91ebAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid deaths per million residents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid view by political party' width='192'>
      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
      ir//fy6ZzUHheFY6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cases per mil map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='deaths per k cases map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO19WYwcR3rmF3nVfbC7eYmURN2jYyTNaHSMRJ0jjaSR7fE9Nux58C6wT+vd
      fdk1YCyw++Bd+MFYLODHNYwFvD4xHo3G8gypW6Kog6Qk6uR9U7ya7K77ymsfin90VFREVlZ3
      kWyp8wMaXVWZGRmR+f9//Ff8wU6dOhUyxpDNZmFZFhhjYIxhFDzPQ7fbRRAECIIAYRgiDEPl
      udRm1Dkq0LnUH/HaqD5GXRcXcvtx26jX6yiVSrGeoe556N6B7/uwbXvgOvG/3FacPsjI5/Ow
      bZvfr9lswvd9pNNpOI4Dz/PQarWG7iE/6zjvrNPpKPuQTqfH7rcOo56BRQ/btm1kMpmxGs/l
      cvB9H+12e+ChqCA/mFGIIjgdgQRBELuNce8v3i+q3V6vN3SOrr8kFFTtikKDMYZ2u418Pg8A
      XOAYhsG/09hlhogr0ADAsixks1mYpokwDFGv1xEEAQzDQDqdBmMMnU6Ht2fbNnzf5/1RjTfq
      3jp6a7fb/H5LxajxG+KDXkzjpmnC8zx+o0l0WoZKuo36LvZR9/s4fRXHt9RxygRiGMbAn9g2
      ffY8b4DQ6Dz5j36ntqIgPlfbtlEsFgH0Gcr3fXieB6BPqGEYotFowHVdfn02m70k7zudTqPT
      6cSmySjNYpTWYQH9h2ma5iK6OohxVY7FMp4sbcZVrZYKkXhH3VvFLKKUFqU8EazYJl2bTqe5
      NFbdQ7xWfA/yrCiD7uO6LiqVCkzThGVZCIIAnuchl8sB6Kt2vu8PjMf3/aExiH2OC1lFZowh
      k8mg0+kglUqNbC+Oaqw7x6Jpb5S0iEI6nYbrurEJkVSuVCqFVqsF3/eHOqtSmVRSf9T9oiSD
      3KdR5+vUGPHlif2OehlyezIBydeS5HUcZ2gMuperGpNqfHRvUqXoXowxdLtdrtbJaDabQ89h
      MdC9R5oJLMuCbdtDz0tHJ6r25e9E71bc6TIKlmVxVYggSwPGGDem8vk8TNOE7/vo9XpDDCC2
      sdhZQm4HiJ6ZFjsTiRJQ156OceL0gdrP5XLwPA+9Xg+O44w1y+ruE0eyiiqPrm+TUoNUwo5m
      PrI95GdNAmFc25L+W77vo9vtDkiWcTtt2zbK5TJc14Xruvw30zTBGOOM0el0kMvlYJomgiBA
      o9HQShfxwU5CvVlqG7JRqfLEAOqXKL8cHVHqZhk6ZpomWq0WgiAYeL6qtkn1EZ+hzuM0atxR
      iCt54xCoTpgYhoFUKjUkpIMgQLfbHbjGNE2lQJfHzxkgnU4jl8stmYtN04RpmkilUvw3apM6
      Q9NYlCEZ5UZbDCYxgywVQRBo9WOVO5MgPwPGGCeEXq/HvSi6NsXvcdVT+fmPogsam6oPKoKL
      Y5jLsG17yNNESKVSQ30goS72SZw1B2wA27aXpP7IiJruxWOGYSCXy6Hb7Q657nTtjNsHkfjp
      t1T7FGCm0HWmY0u3KMk5jqdinPN154o+etd1h2ZuHeHpzlG9+zh2zGKw2LbI3apTx2S6YowN
      OHXCsO/BIoN+wAO3qB5NCIwxWJbFvy+V+FWzi+gatCwL1uv/Fdb7/2tgqlS5IeXrxT6Sd2VS
      M4tKOquktvjZtu1YrkLxechjmwQm3Z4KnufB8zztWKM0CjruOI7yHEt5xWWESoeVPRmiJI9r
      yMqEy895+E8RWpkBgqDzRaJTeYkWI8XjIEr3p3sTSLenGbReryOXy3FBolL5xNmKjstMrbtW
      1w/xmMoYHmeGVBm34meyE0e9A1nTGHXvMAwHGcB1XXieB8uy4LouNz4mxeHygw7DcMhzFMXF
      cjtR9yF9eQhr7wQDIJv8YRgOeKPIxz2KOBYD2UBVQTZedcTHGEOr1Yq046IYWz5Hh1Gzsyx8
      xnlfcRH3vVMf4lwzwACe56HZbMIwjIEACtkJS2WEMAy5cRIEAdrt9gDRxfFIjKNzt2vn8d7O
      3WDpEjY/eC8sBgReBzveeQesuB7fuX0T3n/nXbhOGZsf+NbAAzQMY0giUb8nYZjTf9n+0enk
      sl5O7yeTyQzYUfI9RiHuWFTtOY6DdDqNdrvN40CyPh7nnY3zXnV9izNesg3IqO52u4M2gOM4
      KBaLKJVKKJVKMAwDjUYD9XodzWYz0icsQzUo3/dRr9dRqVRQq9VitSfq2+MakFYqjwcfeRxT
      3RM4Mt+faXa/tx0b7rgf37rtBpzY8z5SV9+Ndf5x7J114fs+z20RBYCsRy/VaaBT81TqoGyX
      yM/A8zwuRHTPSGQ4WTLr1D1d/8Q/8vwVCgU+28aZbSYFWY2VId8/k8mgWCzCtm2ueQzMADQg
      +lwqldBsNhEEASzLiv3iwzBEp9NBs9mEZVnI5/MIggC1Wk2bsKbSI2mQqsGoIF9rp2zsevM1
      7DzUxB890u/7kZPHUOmGeOXkBfzwue/ijRf/FX4Q4kf3mwi9BUICBl18S9FxR4Ekv44YVf8J
      pK76vj/k+VD1UWUPxIX8DLrdLrrdLjKZjHbmElM0Jokoqa97jqlUCqZpDmgekUawaZo8A3Ec
      qReGIQ/Y9Ho9zM/Pc0muOz8Ko16k/BuhPl/F7d99HGuKb+Kjo3O4qWzgmnXrMXP7/Qiqr2HP
      J7tx71O/jtK5d/Hh4QruvSar9MaIjHApbAL5fuJ4dKqReB7lzVAGpayKiMQiG5GTYOR2uz02
      I8lqHYGYOIpe5GtkRPWFPELtdhtADC/QYqZ7UiMIo/TmUTrcqGtVMAwDBvOx4+03kCqtxX3X
      FXDg4Encs/kJ7HrvPay9427ctmkNdu3YgWpqLR68cRXc3rAurSKYSbr9xPZE4pUJUxXZFfso
      2ixRhmCUJ0VWj8YZp2y0yzPaKDWF0vHFVG/LstBsNge8QItFGIZc8g/Yne12O5zkAgQydGu1
      2sBvOsIaNahR2YzUhvjSSS+koFEckFEU536i3inru+fPn8eaNWti3zcOVEaw/Fu73UYmM+je
      1dkNJF1FwaTy2sjCT8X8MiMSyCuli1WIEp6xhQVZNAPU63U+RjkLVeyvin5U75ByqGTGnHgc
      oNfrDWQJRhlDdEwnVcf1UIgvnxhR1w6dSxD96zoJqSIIub9RDK0i3jhQvWy5rWw2i1arhWw2
      O9B3VR/jPnN5PKrvunEQQxYKBbRaLYThoMtbJNJ0Os3XHLRaLe7VUs1Wsg0T9bzk8TiOw++r
      NIKXiiAI+BK6caB6sDJ0OrfonRFfiKxD6iSdTJBR6oHINKKUlGcBHZZiN+gkr9ienNYi2i9x
      2pfVLB2DyIyoGlMQBGi1WrBtG6VSCQDQaDT4Mki6LpPJIJvNotPpcLtRN2ZVX0YdF8dCuWgU
      7wImzADdbneAy6Og42SdBa/SZ+lli1Jf18Y4Om3UjKFaeCISjk7tiGtsxlENZeIXl0Y2m004
      jsOTxHQ2jIqBFuMVkvsk97PRaKBcLnNvYBgupFibpsnjGLIhrWM+nY0Up49k+IqYGAPorPao
      jsY1KKNUKJXXg9qO8zLFhyo/XNmQJ0JT6aOj7qVbyaUiRFlyicdUUpqOkxfIdV30ej2eHqGb
      CYmpVa5p1fMU/4ttRY3d932eBm8YBmeCMAzR6/WGFtnL0DGW3JdxQc9tYgzguu6A7i8i6gGN
      Ky1l41N1TPysSztQqQey+qAjPjEPX2QalZ5K7ZKqJJ+nMyJHQcUw9Jtt22i328pEQxGy8Bhl
      v6hUxShkMhm+8o9ARm6r1YLneQPPPO7zkJ/vqNkySsOYGAMQMY2jv6sQ5WUYxfEyMce9Vl5Y
      Is5mcr9FY1mESODi/eQ+qCQuHYuSdrpxyWOjF0zLCSm4qXsWo9QYQhzvmNxPWvknjycMQ6RS
      KXQ6nYFsgLjq2CjhprtGJn7G2OQYwHEcHpWM0xlCXMaQuV3H1eMwiWjUyueoIph0H3IhimqE
      qP8TwYnqVdSYxPvGeR5x1UbHcXh1h3Gi+HHvEYV0Oq28Z7fbRaPRAKAvYzNKv1dJdYJKgOqI
      f6IMQOm51Wp1JOeqOqQ7Py6DyBUTZB93NpvlCytIVdPp+3J/5e/EBLLRLTKBbpyj1LtRs8A4
      0z3Qn916vZ4y/TnqPrJQiStlKTVbF4OhNeBx2h71/lXPV0Xk4kwhq3AT9QLZto2pqSlUq1Xu
      DdLpl3EN1DjQEVgYhrBtmwdZPM+DbduwbXugigUdE4lErHUktidK/FEvh/7HYXaCSsURx6hT
      s6KYzPf9AXuAjgVBMKQeqTBqFhMZn5ZqiuOmOkNUaiVulugojHoHYr91tsBEGYAeAmXbFQoF
      MMYWHRsY5wHJkoQGTLlMlH0qGn50fiaT4WUH6SU2Go2h88T7qIzgqL6NO6Y4L1bVnu4evV5v
      wH4hItQxnNxv1bpmlfR1XRdzc3MDLmPXdZX+fZ0aE4ch6XqZCaLeg2qWn3gkWKwrQz5pVafi
      qDfjEpncHhlhYkUz1cMiqUUGGy08J8aV3Z86IzIuosaukuaqaV2+JgqU6iKfNypmI88k8n8V
      SDWMEnhyO6rnEZc2VH2Un09U4TdrlKE2CioDlL5TPRfddVFYKpFRMEhn5MrTNtWfAcANR8qy
      JAlI/Y5bRS8M++kYhmEMLV4nb5AoxXQGqEggi3kWumdN9kFUztQkZqzFXqtijLgOAAIRP2NM
      yZTWUgifCltRhC2XyyGVSvH8j16vN5YhqyKGxYCxhfIhYRgO2CMqxrIsixO553kwTROO43Af
      NiXKUbRSdvmK7VqWhZMnT/LaR7lcDu12G+vXrx+a8mUfeBR0Em6pz0mObouI6/rUEWmUwR+n
      b3GP6QSw+JloQR6TNepmUeh0OgMhbM/zkE6nYds28vk86vX6gFvUNE2k02ltwGxSoFRaoB/+
      JgZQBaTEmcDzPJ4xCPSfC1WPsCwLqVSKj5d+p9mCnsHU1NRAX2gWkIWBnHwneiui1COC2H+R
      IVVGn+46un+r1VKun5ZVFTKa5XNU946LqOujvEOqftIx0V6h90MlZOS+LdoGYGzBtUhqglim
      zjRNZLNZNJtNMNYvSUKFnNrtdiy3Y1zI+Tnkg6Z1x9Q2/VmWxWvE0DFiVNUSO1G6FwqFgd9E
      TwetqaaXQLNAuVzGhQsXsHbt2oF+irMApfyO8pBEqavy7KbKbJVnLsMwYpXFJ0+O+BxVs9K4
      C6dUNg3ZXSojVwX5ep2KqrLhlmQEU9WIVCqlnAYdxxmq3RiG/SigygAbR1Wi0oCO43AJS5Xp
      KCeGPDtUt5QeOJVnlPsk9lN3X9VvREhUWZn83GSAkyu20WgMMBDNOpVKhdsi69ati+yDSgWK
      8uSIwoHOVXlkRkVVaYzi8aiotE7AMcYwOzuLUqnEN/uQZ2XDMNDpdAb2Q1gqVAmTjE0wEKYj
      DhV0RldcBiBbIwz7a48p0FMoFAaqCBMTtlot/pliAnH6OS5odqH2xQX2xWKRFwMoFAqcMGdn
      Z7F69WpYlsVTgmkNteqZ6FIwVOeK+q9Oz5dnG9U7GFWpQhy/7judPzc3x8d76tQpLsBs24Zl
      WbxqCKll586dw8aNG/msOglmEPt9RQpjjVNdQoVut8tzumkwtNpffOhUgJdsD114/lKBmLLd
      bqPb7aJYLKJaraLZbCKfz/OZjBjGtm1UKhWeORlnTays9kR5k+TzgNHSdRzhMEoVCsN+0LHR
      aPDjtPNNu91Gr9eD67p8eSRlFWSzWTiOwxMuRW+OrNrp1Cpdfy87A5CUlH8bx3CigJb4sFXu
      XNM0US6XByTgpKR9HIgEnslk0Gw2sWrVKszOzvJK2qtWreLRWMYY1qxZgzNnzmDDhg1DUlZ+
      TirJL+rN4noJuV/jqJvjeOWibBSgL6ja7TafwUkoUZ3YXC7HJb1hGPw5kZobx0EwaiwDv016
      TXAcUKUIoB+FTaVSaDQaXGUggiVdWmcYym7ETCYzkUrXlwpUGubs2bPI5XLIZrMDeTGUq0Qr
      o/L5fOwFRgSVFwgY1IHj1BGSZ1IAvGognaO7Vu6H+J/6ooJlWSgWi2g0GkPVncdhQtUM4Lou
      d2kP3DNWi5cA5CVyHAemaWJqagpBEKBSqcCyLKTTab6kjqbNuMQwSgpdKZCkW716Nf+NIuUU
      MLRtmycVXrhwAeVyeUkvHlhIZSAmIO+UeFzXzrg+/FH2hNg/Ue8PgoDvQqkKnsaV8PI9VOcM
      MOPIVi8BLMtCuVzmwSrRk5LP57lHpVgsIpvNDqzhFM8lkEuWFoSPqiZ8JSG6YKluEoGINAxD
      btPU63XtC1UZtPLyTPGYLIUplqFqV64aMere4j2jUszlPol2W7vd5sXTqL+yTSOnnsv3Hlfw
      XZEZQNTJRZCnRgzKkKdH/E7nig+cdElSIXzf53veLqfZgMZoWRZarRZc14Vpmsjlcuj1egNJ
      a/l8HmfPnkWpVBoiBp2xO8qFGmd2XKzgUEngqBnBdV3+ruIa7+J/HbMTVIUShtTo+MO7PJAH
      IvqvZUOWpnPa5C8MQ15IiSK6y4n4CWK/iRE6nQ5PvxAlb6FQ4F4TeTwqCQgMFyIbNRNMyjMm
      E7vqu/xHDC8TvziexUh2VR9UuOL7A4yCyOW5XI4TOdA3oMXcczHkTbbFcgZjjBe3pR1QSI0z
      DIPHS2ZnZ/kevuK1QHSOkKzLi8JEbEP0HC12HPRfVMPGhcrrJR8Xj43S+Qf8/ZbFYw4ilt0M
      IEP0WFBdGcYYCoUC36iZUh4qlQrfH2rc9QdXAsTUogQWP9PeDKVSiVfaiwo20fcoiSnq9yR5
      dXr7uGOJ66mh+4l/ch9V7crtqzYJVCGTySCdTiuzg5c1A8hGIqFQKPAcd9d1Ua1Wh2q+RPmM
      lwvIHhDzkih9Q5TU5BET4x6ySjjKIJTdmpOKqgLxUttFFU6eqcYpf0nXOo7DF1yNAtmUqhy0
      ZcsAYdgvZioTdqlUGti1hjxE4sCy2SyPtC53MNZP3hPVNVo/QFmoQRBgZmYG58+f59fI6ksU
      E6gIVDYML6WwoPZpxhFnn1FeJpXaQ2Oi+qHyfXRQudGXLQO0Wq2htGkqniq+aHGhCaUsZ7PZ
      2NPjcgEl7YVhP10gm80iCAIeeKJKyfSCVdJ0FESvmWwbTAJR7UQxoQ5Rblh5mSW1pxqPGGyU
      seyMYJIQcjCE/PyylLMsC6VSia/qsizrK0X4wELOEBUToF3hxbwXigy3Wi2eUSpDFRfQHYv7
      jIhp4uQlXQ7IhnycfqiYhbBsGCAMQ16yRLTUDcNAsVjU7lDD2EK+zXJ1e44CSeVMJoN6vQ7P
      81Cv14dKM5bLZZw9e5Z7uUZJVZUNoPMaRfVtsW7IpSIqvqHqvy4WYJom361IxrJggDDsr5oS
      JR4Ft0jqj3oBX1XiJzDWX8ZJqd1UypukL0W2y+Uyjw6TYAD00l/lX9cFxGR7QbxGFYGNG1hb
      zLOIeudiP0fdmyrQLdsZgIhf3FADAJeIcdxzlzPF+VKCMcYZPgz7pcPJm0VRbtu2US6XEQQB
      5ubmUCwWtVUfVCrQYvz9ciqC3GfCqBTucREl5UV9P4pZVBWhRVwxyhEHIHdSTG1YSSB1jnZe
      ZIzxuIecsWsYBmZmZvium7r2VARD0DFClJQXpbPsy4+SxrIrNApxiXvUOOLgss8AJPGpJHY6
      nR7Y4ZAqCn/VvDiTBGMLGZti9DKfz/O6moRyuYxaraZVbWSfu25WEL+r1CD6TSzlouu7+Hlc
      N6tK1486Ly6N0Owkn39ZGSAMQ+7eNE0Tvu+j0WjwYJDKTbdSIasbVF+IyjoSKO+JCF8ktjjR
      2VHHVe5Skcl06Qm6e0VBda2KSePODCIo7Vquz3RZGYA2S6Ccd+oQlfBe6UQvIwzDoeBNKpUa
      qHKXSqVQqVS029mq8mvGURlUi+V1UloVeFMxiowow3wpfZehSo+5bEo2GbphGPJyKiT1xShh
      ggVQmjQRhTgLkPeH6g0Bagmqiw7roDseR/KK6o6cbqG6Lkrij9s/KlmjsxvDUF3R75LMAOJD
      EHdqpJA/rYJijPHpOyH+YdDzobSIbrfLV8sZhoFKpYJqtcrrDdE1QPQSxCiprNPhCTqdPkrf
      1zGOasYQf9cdE1UxaltcWaZzzaqY45KpQI1Gg0snxhhfnK7ClQq0LHeQMSzu/0vuYYqWr1q1
      amgGEO0B+i62Sf9l1UP2r8sGNDC6isRiJbh4bZQqJHuo6D8lC8aNDxAuCQPQksRCocBTE1aa
      S3NSYIzxbEa5fOGGDRvQbDZ5lQwAWgkYFSFWnatiqiiojGG5AJfKvSoej0pvWIyHKw4TXBIG
      sCxrQDIlWBp0ur1IMDoCVakQcbDY6+RrRa+ezojVzQpxvEIyE8gMIz4j13WH0iEmxgBibcuE
      8CeLTqfDd3mRc6J0UlOW3OOqmTKhiUGsuPaanD4hXqur5RTl91cRta7f4ndqn4xg8VksiQHC
      MES1WuWFnxLCnzxIv6WFQZlMhns7wjAcqrInS8Zx34nKyFwMsUbp8Lr+xWGspdCYKoV8SYo5
      JWlRxxIGuDQQp23xM2U6RiHqnYjeuiiIu76Ie6fp1Badni4fl9sRNQgVsUbRmNiWnHJB46SE
      QpEZx54BaBdyqmKWz+cHVmglmDwymQwvEQgMqiWqrWlHeVlEghtH6qZSKe6KpVlBLuKrikTH
      oQ2Z0HWLdsYx7uVVZ6Q6UQAxm82OxwBUwYASs8jDkxD/pQO5QtPptHKzOdqWNAxDvrEfHRP/
      qwhUxChCpWO0AXev10O5XI5koknEdka5NcehPTESTKvExmKAIAgSaX8FwNhCMS2qo0OqD2XO
      0hawFHgUjc44kn5UOoNoB6TTaTiOw2sZqdyeqnYvFahvYn9VMwPNKqlUamHN9Tg3khOJElwe
      MMZ4qJ8K54oqAmMLadTAsAtQ9uvrXJFRTCIGy+RNycXPOiYYlwFGRanlPqtiAjoXaa/X43vB
      XfEFMQnigWYBYGELIdkAJk8cra/QGbc6wtEZtaoILUnSZrPJK/NRf+TCu3IhrnHGLLo/VS7Q
      qFiB+J2upWfHN+0WT0iwvEGSXvS+iaBqEpQZKl+rMiDl6CmdKxes0qVVUE1T8R46RhoF2diV
      vUXy/XWI2wc+AyQ6/VcHpPPr9uCifcpUKg1JPhXRi59V3hf6LqtSxJQ0E+iINS4D6DCOs0XU
      +eUdI2UkCTpfQZD7UwcqvCtD9q/rCF2+RoTsTQrDkN+v1+vxlG3dDDJqXJMWxlFLNn3fTxjg
      6wgyVFWzgKje6EoViufqVCfVZ5p5dNupqiAyEt1zUohSyQgJA3wNwVh/uyh5rYWsX8szAkEm
      cF3cQP5M6lDcTRBF4qeg2qWyRWV7go//ktwtwRWFbMTqiEw8j3aLUbkT496TpL3jOHzDcLGt
      OLiUzhiVNyphgK8hwjDki5FoEw5Z2qqYQKUyyBJT/E08R/49k8mg3W6P5b0R+38pQBum0z3C
      MEwY4OsI3/dRq9XQaDQQBAEvFizPAjIzyFARvY74VbAsa6Dmk8oeibp+ku553b0TBvgawjAM
      HgtotVq86K6KoKJclbLKpLIn5DZFoqYcpqi9Gi6HC17sK7mPuSPgkt89wWWHYRhIpVJ8RxSV
      tBdriuoM0KhosYoZVKDYhHzN5YRs9Iu/JQzwNQVV1S4Wi8o1A7RHc5QqJBK7jkF0M4HuHB10
      UeqlMgz1nSQ/1Z/igmBJrSdYtiBpl0qlEIYhtwcInU6H76dACXZx241yi6qOqYpriZADZvQX
      FZ8YB6p2EgZYASAmoPUbzWaTEyNFbNPpNPL5PI/ijiOldb/JqtO4FaN1BL6YYJl8rpgawdgi
      VoQl+GpBZALaZomS19rtNt+aNZfLIQgCuK4bmQMkS2JRouokNtXoF3dpFImQzlcZ2Kr/4h4S
      iwG1EwQBWLvdDuXS2wm+ngjD/rrYbreLTqfDfeJUbnHfvn2Ynp6O3FJIbo8gEj8t2JGPkx9e
      XksgxyWocPIo/V/nRpWZUYSYEBiGY64IS/DVBmOMbzRoGAZarRbfYdN1XczMzOCaa67hblO6
      RgUVg3ieB8uy+GIT+VpVXEFczSUzUdwxyZ+73S4vIibaE6ood+IFWmEQVaJ6vc63WyIVCYi3
      flhsT/VZB1V7UblIcdrTea90bQ24g2PfKcHXDtPT0+h0OpwR1q5dy/XrUVmcMuGPclmS2kPq
      h2q5Jn1fjOtT5ZKNE3xLGGCFgqSu7/t8LzbauESEYRjY/2UNs9U27r15LVK2mtjFIBPp8DSj
      jEp3iJMOMSptQnVdFBhjMIJuwgArGel0Gq1WixucjLEBNyEA7D1Zxf/+6UcIwhAfH57FH//w
      LuVaA/pO13qeh1QqFWtGkT1OumNxEecaI+jB2vIfExtgpYK8LVGVPhhjODPfQnCRoE7ONrSZ
      ovRdNGjJ3QpEE/ZQmkZ3DqkTr8Ny67E31hsFOeLN3CZQO57MACsZjDFe30eEqEvfd/MafHTw
      HM7Ot/Dbj9ysXFdLbYmgCDR5hlSQI75hGMIyDViv/SnY3H6wq76D4Ht/MbGtV0Wm85wyjPv/
      U8IAKxnk/aGdJ1WL6VMp4E9+dB+CMITB9OqFmO4gzgKUiyPaFtFenxDwL84cXleZFjEO5LXJ
      A32+8dmEAVY6iECCIIhcaG8g2lAV1wHTbwD4EskgCGDbNoBoo9jzQ5hP/BmMUzvhb9ys3Np0
      FMTzRxUQThhghYNckmEYYv7McWx99RVsfu7HWJ/tYssvXoGVn8bjTzwExzCw/+P3cODkHHwz
      h+eevA9bX9wKMz+FRx97CEyhzhColpEMeccbAktvQljeBAOA+gzwlA3dmEQcP/AZtrz3Kf7d
      j38flXMn8PKWF3DfD/89ri0lSyIToE+gYRiivGYj7v3mTfCCEMd2b0cvP4NsIQ/zovQ/fGQW
      33/mGeQwj8/ffRPt3Awy+TzMi+5UWnQjg7xLyt99F67fZ0KGEN2eKxjXQLtZR6PVARgDwgCd
      bncg7hAV6CL1a+MNt+HGq/sbCZZmNuD+O2+Ed7E7CQMkWNDZBV253Wxj0y134u7lo1cAABic
      SURBVNrUHN47fAEA8MADd+H1V1/FibPz6LRauObmb+KGXB3v7j/LVRWVkazz5XudKl5/8Sd4
      54sTgO9ix3vbseXVl/nx1twJvPjSNrzy4guYb3ax8/3t+MXLLw20SUQuIggCzpByHVNmGBA1
      qoQBEnACOnVkL7a9sxNvvfYmrrrrPuzbvhU79p3BxqKJt9/9AK7nIgx9rNl4M+7e/DAOvrMV
      7+05hatXF2Ca5oDfXwQl4NXr9YHfrXQJj2y+H7bFANPG/Q8+glW5Ba381P7duPuRZ/C9ezdh
      9/Ea7vvuI5gujC7QTNXxbNuGYRjY+/EO7Nq1C6+/tQMnj+3Dm+98iG1vvI6504eSbNCVjiAI
      UKlU4LquVidXgTFA1D7Ileq67pDRSVFiksxkbKfTafTOH8LOczY2334tAOCNN7bgsceeAQAc
      3/0yKqsfwrrqLhzJ3IX7ryvx451OR5lExxiD67rc4B5VRS8xghNo8+6BqGzQYd2bUp1FV6ic
      80P7GABAp3oOr23biVNNA9esyuLong+w7+AhzGw8geqp47j3/gfw8S+34JCRxbPPpLHttS3Y
      d+AQpq46huuvmtbGB3zf5/eQxyOOizGWzAArHUEQ4MKFC7xsOLk0geiyJSq9XkxDFqsviCDd
      PJ1OL2mzFbnShGgQ0yyja5sxBmffT8AObklmgJUO2YhUSf8ADK4XIm3r83nkYJfYnmUwMATw
      wgWfPOUgZTIZ3gdRPZIhB+ii4gPyAhsZZuiCffI3YN1awgArHSovysAxGPiLn3yIs/Mt/NHT
      t+Ob15a12aCqJDnLAFJv/3egfhrGE3+OnrOK5yCZpsm3dKJ+jEphjqOeUVu6HKKAWcB1TyI8
      8kriBVrpEIlORYAXah0cOVNFs+Pi0yPnB7I+RfVHt62pEfSAc58BlSNgrXP8mLjHWdxU56iE
      OjkpjyBWwuZpEcyAd99/QPA7/5zMACsZlKxGn8X/hLWrMnj6nk04MVvHk9+6emAxiwyZGQDA
      ZxmYT/0FWGce3vStYMGwBNcFyuS+joJM+AAGjOFh2IkRvJIRBAFqtRparVaku5AImmYIVSKb
      53nwPA/5fD62YRuGITdmqXiVLm+HMQaDAaZbh2cXB5Lv5Pv1ej1uBKccC5/seAvZa+/BTeuK
      OHbwc8y2DXznztv6Y4vV0wRfS4RhOLD5tm3byj9aRE/BJcuy+B99520GHj58/218fvCEMKsE
      OHZ4P2ptD2HgYfeO7fh0/zHehzirtxhjcPb8I6x//l04Z3aOHBsxrdtpoVzI4ly1BQQuzPxq
      1C8cXzhv7KeW4GsD0eUZhiEa8+fw/E/+DmdqLlrzZ7B161Y8/9OfYb6zsCHfqUMf4Z+efx1+
      r46fP/88XnjxJfT8BQI+uGMb0hvvwOxn23G61f+9dv40vtjzOU5VOzi8axuMdbeiemAHjlf1
      RXPlfoZhCDh5IFUE7MzQcREUee52u3CyRaydLvYPmA42rl+bpEIk6EPOlbfTedx+09XoeCFS
      +Wk89f2nsakcYrZ2cceXoItP9p9CNvRw7IPtuOGhH+BbGx3sPV3jbWSLeez9aCcYa2HviQoA
      oLR6A75xw8aLx4s48PEu+EEb+0/Oa/tG0WNxRZh706/C/42/hTvzTe0WT0Bf76fiwFH48uSX
      iRG8kiF6chhjSKUzMC/SkmEyvLn1BaTW3Ya7V/dtxO0v/xLX3XEPdr++E/W6jVLWQTZj4lTH
      BSUuX/WNb+PZ6z188vZL2LihiE6ni3R6gRDX3XwXfnCthy/eexUzG8oA1DOAaZoaA9aBKhtI
      DIyJM0Jj7jTe/ugYAhzHiaKJQ198iFYvwBeHv0QavYQBEvSJxzRNdBoVHDh0FGZjFcL8ORxr
      5XGP5aLRauHQoePYcP3NOHf6GE6fPYXHHn8K2954FU6vjs3PlNHtNvsL4Q0P29/dhVXrbsVV
      uQAffLgHG9fk8cmeYwisOax9+F58uOsDFNfciKvLKTQbjYGosmgE185/iR0f7cGNd3wLm9ZP
      o9ucx7bt76Pnulh73R3I+xdw7PQcbv7mPbhqusCvE2eE/NR6PPPsev796queGRh74gVa4aAN
      NBhjCLwu5ip1ACampwu4cKGvwqxeux5er4d8PgsgRLvVQSaTRq1yAb6ZQbmQRafT6c8iY6Q3
      kBeIvEuiF8iyLLzy0hY8+cwPEPoBHGdhNjiw6y10V9+O62bSyDgML/ziVTz37NNc8ovJcFEw
      jaQ47ooH7R/GGEMmV8TGfIkT0saNCzvOp+wMj/SmM2mEAArlaQCDMQSxEoQISoSj0ozZbBbt
      djvCCO7hxOEDeG3rFnTtEn71qc1gAMLQx+dfVvDDe6ZRO3sc/7D1JVx716MDV44yrGnGs91m
      YgQn6CMIArTbbbRaLbTbbf650+nwv0ajMfCd/iidgdrR/VHQjSR+LpcbytpccIs6WLPhGjz6
      vSfgtquoz82i6wMnPnsHG2//Lhjz0DPy+L0/+DFOH92LULo+yr3a6XTgui7O1NxkBljpGCUt
      VRUZVHk5cUDGdhiGaLfbyOfzQ9UiKMAVhiGefPxhbH/7XTz88KOoz50Ay69GWNiIezatBhBg
      7swRfPxJFQ9tfhThxWQ6gviZMYZut4t8Po8wDGHbNtrtNrrdbmIDrGSEYYh6vc7LogCDRCpm
      VNJCEyqktRjid10X6XR6IFlNTIITc4woyBYXupLu1F6r1UIul+OM0Wg0kMlkkhlgJUPMBSKo
      Spvoqj0s9p70n0qpiL+LpRV9349t0AKDi29U9xQZJJfL9aPbSxhLgq84GGPI5/NceqqyK3VJ
      cnTOOAyh0suj0ptHpUjLfdH1h9ohA933fczNzaFUKiVG8EoG5f9QAttA9YQRKcpyOjRjDCcv
      tPHZsQqCMDpPX1ZVVJtp0PlxcoXE8+U+ip9TqRQcx+HVsD3PSxhgpYP0bdXvo/z5InEem23i
      z/9hJ/7yhd342btHYu/flaoeROq1/4KUv2CHRBG+/LvrA9v3nMPhsw1+XDcW+hPXDCcqUIKh
      hewEsZqDDPnc89UOXL9/3um5xkjm4ffwWkDjDBC4YNZglWl5liHiFzfa+5f3j2DrrqNI2Sb+
      5795CMWMkJmqWRZpWRZWr17dX64Zq5cJvtag+pmjDGJSG1Qzxp3XTePROzfiXKWF33joRmV9
      INWaA3/dPcBv/T0CzxsiRtq3QDTCZWJ2rD4zWKYBI2KJpA6JGzQBj+DWajXumREXwcg7Nupq
      CNE1KuKn33O5XOx+9Xo9tFot2LatVcn8kOGL4/NYU85gXTmtnXk6nQ5yudxQJYnEBkjQX2zi
      OCgWi0MLyWXCMwwDjuMoUx4CKRglQtTrt299HvtPCKnQYYAX/v6vMNcOsfv9t/Cv//JzHDk9
      z+8PAI7jIJ1OD/3lMince8s6XLu2xI1c+S9yldnYTyvB1xLEBNlsdsiApRnBNE2+Osy27YEU
      iLj3qHx5ALPVHmq1Nv993+534MNGy23i9LkAP/jB97F75zv8OO9P6KNSrfUDW7V5HDhwEG13
      oSx7u1HBwUNH4AWA22ni4KEjENbqKG2ZhAEScDDGkMvl+CbXYnEr0zTx6u5T+B9/vwvv7ZuF
      YRhIpVLodrux/fRh6OH9jw/jvjtv5L+7zQs4WjFx/foCgCyKuQ5efeM9VFrNwQZCHx/t3IGX
      t70NADh77ixsE9jyy4vFcn0Pe/bshxF0sOXV1/HqS68hcJv4161v9Y8rUjqAhAESKCCqDETc
      800XP91+AEfOVPGPb+yFe1HTSaVSkbX6RTCvC8MC3tr+LnZ/+im+PLwPc40ewk4F7+76GJ/v
      PYjrb7kDN149heuvu23wWsPCt+9/EDOF/nLI1VMlfPLRbkytv6Z/3LTwrXvuwfnTx3DVhqvR
      9QKUZ9ahUTnRP66IZCdeoARKkHojRoFzKQur8mmcq7SwdlUOprlQHZdsAsuyIv3/gZnB959+
      Br12A73Qgd+eR7q0Fs88ux7Nh+6HnZtCffYE5sIcHr7vBnQ7FxPW2MIO9xc7hPzUejz73DN4
      YetrAO5AGAZ49Zcv4No7N+Oma9bi1qunsf/wCWQyJZ5SQWMSXb6JFyjBEMgrVK1W+W+GYaDS
      7OHwmRpuuqqEjD2sTlCevcroXKwXqN1uw3Ec2CbD++9uw95Dx/Ht+x5Gd+4kqm0XhZmNKPsN
      zNx6K1766T9iZu3V2HDjbUi1z+HwyXO46a4HcO2aon5zv4QBEogIgoDX8V9M4lutVlMyAaUk
      R23LqkKv1xvpzRmFbrfLy7/ISFSgBErU52dh5qaRdRj2f/4xGl0D37jjNmQdC2Ho4/D+fchM
      XYWrVpdRnz+H42equOXmG+E4Dic2IliyEeKmR6jg+35kDVNVnIBSsMlrJSNxgyZQonb+FLa9
      8nMcmO0i9Obxxb4L2LBhPWyzTy6f7ngD9TCDT999CbNz5/DaO5+hlM+gd1HNoD3HxJpDjuNE
      blQxClRWXf5zXZf/ib/7vg/f90d6qRIGSDCE4sxVuO/uWwEAQauDhl/Hzl270Oz2UyVmZlZj
      32e7Md82MX/gU9S6XXzwwS5UGgsbbtNaYzHnX4Vxsj1VEPOFxLbitpkwQIJIhNnV+IPf/iEe
      uGU19hw5AwA4cugYHnvqWdx8VRbV0MJ1N9+J7z90Bz7ZfxTAgsuRmKDT6SjVH1JdHK8OO+zF
      TqAjUBkVMTlOXBQTh7kSGyDBEGa/PIx3PjqEllXHzH3fwOef74UbGHj08bux7a3t+Mat38CO
      7a/DMFN4/ImHsGvbq3j1eIjvPvIY5EJX5L5UEaJhGEgf+CnYR38NODkYj/8ZusUbh85TwTAM
      bPv8DF7ffQLfvmkNfuW+TfzeqrUKOkZIvEAJBiB6gRaDdrut/F3cPolgwYPzwh+Ctc4DAMIb
      nkbngT8ZMHbJCySj3vHxp3+9Hb2LG/7+tx8/gI3T2YFzGGNot9vIZrPK2YCxpC5QAgmMMegE
      IqVHUGBJt7xRlcMPYGjP3tCwgNK1ADHAqhsG9ieLgmOZSKcs9LwebNNANjW4DkC+P/VJrDoR
      BEEyAyQYDzITiMWtVOuK6Rrd4nbbb8A6+AsgO43eNU/A9Qev7/V6ynRoxhi+nGtjx96z+OZ1
      07h5Q2lA76es1mazOZDgR8f5/gIJAyRYLMIwRLfbRbvd5r5/OddG/K+r1hxVcUKXxEag0iry
      PemaarU6xAAioyYqUIJFg9Ql27ZRrVb5ijKRYEn6Z7PZRUdy4/RDBVnvV3mGEgZIsGSYpoli
      sYj5+XnlOlxaSrln9/s4NVdHO0jh7msK+OjQGcDI4NefexIGA959+Xmc62Vw9bU3Yk26i88O
      nUSlWsMjDz2At197EXc9/Ue4ecrHz5/fgvSqGTzy6GZkbBNnju7D7n1HUalU8eyvPYN/+j//
      D1fffAsefOwR3ge50BfNLEkcIMFEYBgG2u02Go0G5ufnceHCBczNzeH8+fOo1WowDAN33rsZ
      D3zrdoSBj/2Hz+DXfuVXsC7TQqXT18drdRe2ZWLVVBkbb7wd33vkQaQMhtKajdj8nTsRhMCJ
      D7ehVVgNwzRBLLZu0y148rHNSNsMQfUsOtkpZEslpO3htG5gIV6QMECCiYHUIcuykM1mMTU1
      hZmZGaxduxaGYaDT6eDo3g/w1keH8dzT3wMzLpJvCE7IT//m7+KZJx/HBzu2oTV3Ej998RU8
      8vRzyAmZp77n4cbbvo1vX53C9j0nAQDd+ln8889+ie8+8QOsWncT/vjf/gjXFdr46MDp/i00
      BbkSL1CCiaLX66FSqXAPCxW8Ion7N3/1l1hzzS3Iz2zApoKPnftOwE6X8NQ9G/HxmRSs2kGc
      r7aAdBlm9TBqxioUcnncsmkd3nnzJbRzN+E3n70PL//iZZgWw3cefRpH936BsHYcZ90cCvkc
      7rplEz75fB+atQYefOoHyLCFOILK2E4YIMHEQEE0CoYR4TuOM3YZxUmA0jCikBjBCSYGKj/Y
      6XQG1I5CoQDf9/k+Xqogmuu6ygg0FeZyHAf5fH7ouCrCPE5/EwZIMDFQrVFiAkIQBHzP4TDs
      V6Sen58fyu9XEbg4c1ApFjH703VdnD9/HjMzM2Mn0wFJNmiCCcMwDKTTCwWqaOcZVZpEHOiC
      Y/TfcRwUCgXMzs6OXaYlKYyVYOKgWYDSHkjii4RsmiYsy1qUxCaIs0c6ncbq1asH1jBH9Uv8
      SxggwcRhGAYymYXd3OUF6YyxgeOjECevnypH6Nb+Ul1S+S9hgAQTB0lbSn3wPA/NZnOgxqht
      27GXSMZdNZbL5dBqtQZ+830fs7OzqFarOHfiEP7v3/4dOm6AEwc+x5YtWxI3aIJLA1J9aNdJ
      oJ8MR5XngH7B2jhrD8QKdaNQq9XQ7XYxPT0NwzBw4cIFlEolOI4DwzCwc8fbuPveR5F1DIRB
      slN8gksEUkloJ8hGo4FutwvTNJFKpQaCZOPGB6KuKRaL8DwP58+f5zMM/e+nVS+cu2/HWwkD
      JLh0oDW7tCKr2Wyi0+lwv71pmigUClw9EhGl9oxiGsuysGbNGriuO6BmnTi8F59++jk6QRGb
      H7wDe88m26QmuAwgYp6bm+MbbBSLRR4XIFVIJOqoLU8XM2sYhgGGAN2eB8ZM5HIZ+H6QzAAJ
      Lj1kgvU8j6/0Io9RGIZoNBpDKcsilppKYdkpWHaKt2UYSSQ4wSVGGIZotVpDKk2v10M2m+US
      PZvNwnEcNBoNHvGdZO5QEAS80O7AWoWJ3SFBAg0YY+h0OgN1e6j4Ll+be9FopsS5pQTJoiAz
      YsIACS4pKOgluj+JuKn6s8gEmUwGhUJhoOCViKVWkpPbSFSgBJcctFgmlUqh3W7D8zyeMdpq
      tfhxwzB4LhEdU+1Fplp2qbpnFKMkDJDgskLU9YGFJZS+76PRaHCDmM7NZDIwTZOvM1YZxLqK
      03E9RUkyXILLDiLOfD6PUqnE8/3lNQJEwPKulTJ02aLitZFlVZY2nAQJFgfKF6LlirRYRgQl
      sOl2nYl7H3ERvHwsYYAEVxRElN1ud2inesdxUC6XeU2hcTbYkGsA6dSohAESXDHItTqbzaZy
      FsjlcigWi0omiPIKiWUQdeckDJDgiiKVSvFZwHVd7TZItm3zlWayKiMXwB0HCQMkuGIgb8/U
      1BQcx+Ep1KodHclwzuVyWlWIV3sbYTiLSBggwRUFGcOlUgmZTAa1Wg3z8/ND9gCdm8vlkM/n
      I+uBAgsb9KmMZ5GBEgZIsCxAqdHZbBZBEKDRaGgzQrPZ7NCSStHoDcMQ+/fvh2ma2LNnD7c1
      6BilZfi+nwTCEiwfEHF7nodut4ter6fcrIMxhkKhwHeHJIgeH8YYZmdnkc/ncfLkSXiexxfL
      UIyhXC4nM0CC5QfKB4oqeGWaJsrl8tD2SUT8U1NTaLfbyGQysCwLmUyG2wYUW/A8L1kQk2D5
      YdSmGOJ5vu+jUqkMRJJFI1i1hSqpRMsuEBa1G3iClYO4HhxacikW4gIG7QHazkk8JsYelhUD
      qCz/BAmiQF4kEXLwS54NRCwrI1jW+Xq9Hs8DoekuDMMlVxVL8PWCuBexar8wgrx7JbDMGECG
      uLFZrdHC3778KebrHfzeE7fh+o2rEyZIAKBPJ7ZtR2oQqtqkYRgubwagkhZhGGLbx8ewdddR
      AABjwH/+/YeU224mWHlQ1R8V1R4V6PdlZQNEoZxPw7jY6VWFdCL9E3DIzhOxfIoIpUq03Nyg
      QRAoPUGu52HnnpOoNrr47u0bUCrklPndl2orzgTLE7R0slarxU6IE48vOwbodrsjt7XRwbIs
      5HK5CfcowXIGeXwqlcrABhp0TKUWid+XpQrU6zTxwe5PAACV2S/x2ssv49P9R0Fj+fLIXrz8
      8ss4euoCOo0K3n7zNXz4+UFc3h2oEiwH0KxfKBRiLZ+UF8osSwY4d/oUDh8/DgAwnRweeeIJ
      nPh8J1oX4xm5VWvxxBOPYde7r6Neb+Du+x9G5ehHmG8nQbSVCtu2sWrVKp7yAAx7flQ2wbJk
      gI3X3YTpYr96QCGfwiv/8lPMBQVkzP6AnLCHn/3T3yG/5gbMrNuAI5+8g17uapTTy3I4CS4D
      GGNwHAfFYhHT09MDHsKo6hDLnmLqzR6e+rXfwoZ8B3O1JuqtDjwjg9/40R+idf4Y9nz4FprZ
      a/DMYw/ASBxDKx6kElHxXdXewMBCjGlZGsEfvPsG9h75EjNrNuH6DXnsPXgM0+uvw+0bszg0
      78CsH8exM3O47pY7EFSO4vCpKqx0Fk88/himSoUrPYQEywBkHFMhXtd14fv+0BZKy5IBEi9Q
      gklBrkpdr9fR7XYX7IPlxgC6OEAcJHGABKPg+z5arRY6nU6yHiDBygSlTriuu7xzgRIkuBSg
      VWGWZSUMkGBl4iuXDJcgwaVAwgAJVjQSBkiwopEwQIIVjf8PEMQLkl3lCRQAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='deaths per mil map' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
